#!/bin/bash

set -e

hash_algo=sha256
files=
output=
while test $# -gt 0; do
	case "$1" in
	--files)
		files=$2
		shift 2
		;;
	--output)
		output=$2
		shift 2
		;;
	*)
		echo "$0: Unknown option: $1" >&2
		exit 1
	esac
done
if test -z "$files"; then
	exit 0
fi
if test -z "$output"; then
	echo "$0: --output not specified" >&2
	exit 1
fi
if test -z "$RPM_BUILD_ROOT"; then
	echo "$0: warning: \$RPM_BUILD_ROOT not set, using the root directory" >&2
	RPM_BUILD_ROOT=/
fi

mkdir -p "$output"
cp /usr/lib/rpm/pesign-repackage.spec.in "$output/pesign-repackage.spec"

cd "$RPM_BUILD_ROOT"
args=()
for pattern in $files; do
	pattern=${pattern#/}
	if test "${pattern:0:2}" != "./"; then
		pattern="./$pattern"
	fi
	if test -d "$pattern"; then
		pattern="$pattern/*"
	fi
	args=("${args[@]}" -o -path "$pattern")
done
# delete the leading -o
unset args[0]

archive=$output/$RPM_PACKAGE_NAME.cpio.rsasign
archive_dir=$output/$RPM_PACKAGE_NAME
mkdir -p "$archive_dir"
# create an empty nss database to make pesign happy
nss_db=$(mktemp -d)
trap 'rm -rf "$nss_db"' EXIT
echo >"$nss_db/password"
certutil -N -f "$nss_db/password" -d "$nss_db"

echo "Creating $archive"
files=($(find . -type f "${args[@]}"))
for f in "${files[@]}"; do
	hash_file="$archive_dir/$f.$hash_algo"
	mkdir -p "${hash_file%/*}"
	case "$f" in
	./lib/firmware/* | *.ko)
		openssl dgst "-$hash_algo" -binary "$f" >"$hash_file"
		;;
	./boot/* | *.efi)
		pesign --certdir="$nss_db" --digest_type=$hash_algo --hash \
			-i "$f" | perl -w -e '
			my $h = <>;
			chomp $h;
			$h =~ s/hash: //;
			print pack("H*", $h);' >"$hash_file"
		;;
	*)
		echo "Unknown file requested to be signed: $f"
		exit 1
	esac
done
cd "$archive_dir"
find . -type f | cpio -o >"$archive"
rm -rf "$archive_dir"

